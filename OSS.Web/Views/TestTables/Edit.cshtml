@model OSS.Services.Models.TestTableModel

@{
    ViewData["Title"] = "Details";
}
<div>
    <a class="btn btn-outline-warning" asp-action="Index">@T("Back")</a>
    <strong style="padding-left: 20px">@T("TestTable")</strong>
</div>
<hr />
<div class="row">
    <div class="col-md-6">
    <form id="frmDetails" name="frmDetails" method="post">
        <input type="hidden" asp-for="EncrypedId" />
        @if (Model.ModelMode == OSS.Services.ModelActions.List || Model.ModelMode == OSS.Services.ModelActions.Delete)
        {
            <div class="form-group">
                <label asp-for="Text1" class="control-label"></label>
                <label class="form-control">@Model.Text1</label>
            </div>
            <div class="form-group">
                <label asp-for="Text2" class="control-label"></label>
                <label class="form-control" >@Model.Text2</label>
            </div>
            @if (Model.ModelMode == OSS.Services.ModelActions.Delete)
            {
                <div class="form-group">
                    <input type="submit" value="@T("Delete")" class="btn btn-outline-danger" asp-action="Delete" />
                </div>
            }
        }
        else
        {
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Text1" class="control-label"></label>
                <input asp-for="Text1" class="form-control" />
                <span asp-validation-for="Text1" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Text2" class="control-label"></label>
                <input asp-for="Text2" class="form-control" />
                <span asp-validation-for="Text2" class="text-danger"></span>
            </div>

            @if (Model.ModelMode != OSS.Services.ModelActions.Delete)
            {
                <div class="form-group">
                    <input type="submit" value="@T("Save").ToString()" class="btn btn-outline-primary" asp-action="Edit" />
                </div>
            }
        }
        </form>
    </div>
</div>

@section Scripts {
    @{
       if (Model.ModelMode == OSS.Services.ModelActions.Add || Model.ModelMode == OSS.Services.ModelActions.Edit) await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(function () {

            @*if ('@Model.ReadOnly.ToString().ToLower()' == "true") {
                $("input[type='text']").prop('disabled', true);
            }*@

            // [I think it doesn't work with fluient validation API]
            //$("#frmDetails").validate({
            //    onsubmit: true,
            //    submitHandler: function () {
            //        alert("Submitted!");
            //    },
            //    rules: {
            //        Text1: {
            //            required: true,
            //            minlength: 5
            //        }
            //    },
            //    messages: {
            //        Text1: {
            //            required: "We need your email address to contact you",
            //            minlength: jQuery.validator.format("At least {0} characters required!",5)
            //        }
            //    }
            //});

        });
    </script>
}
