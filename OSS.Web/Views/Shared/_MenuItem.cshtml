
@model OSS.Web.Models.SiteMapNode

@{
    string url = null;
    if (!string.IsNullOrEmpty(Model.ControllerName) && !string.IsNullOrEmpty(Model.ActionName))
    {
        url = Url.Action(Model.ActionName, Model.ControllerName, Model.RouteValues, null, null);
    }
    else if (!string.IsNullOrEmpty(Model.Url))
    {
        url = Model.Url.StartsWith("~/", StringComparison.Ordinal) ? Url.Content(Model.Url) : Model.Url;
    }
    var isActive = false;
    if (!string.IsNullOrEmpty(Model.ControllerName) && this.ViewContext.RouteData.Values["controller"] != null) {
        isActive = Model.ControllerName.Equals(this.ViewContext.RouteData.Values["controller"].ToString()); 
    }
    var submenuId = "submenu" + Model.Id.ToString();
    var childNodes = Model.ChildNodes.Where(x => x.Visible).ToList();
}
@if (!string.IsNullOrEmpty(url))
{
    <li class="nav-item @(isActive ? Html.Raw("active") : null)">
        <a href="@(isActive ? "#" : url)" class="nav-link text-truncate" @(Model.OpenUrlInNewTab ? Html.Raw(" target=\"_blank\"") : null)>
            @if (!string.IsNullOrEmpty(Model.IconClass))
            {
                <text>
                    <i class="fa @Url.Content(Model.IconClass)"></i>
                </text>
            }
            <span class="d-none d-sm-inline">@T(Model.Title)</span>
        </a>
    </li>
}
else
{
<li class="nav-item @(isActive ? Html.Raw("active current-active-item") : null)">
    <a class="nav-link collapsed text-truncate" href="#@submenuId" data-toggle="collapse" data-target="#@submenuId"><i class="fa fa-table"></i> <span class="d-none d-sm-inline">@T(Model.Title)</span></a>
    <div class="collapse" id="@submenuId" aria-expanded="false">
        <ul class="flex-column nav pl-2">
            @foreach (var childItem in childNodes)
            {
                @await Html.PartialAsync("_MenuItem", childItem)
            }
        </ul>
    </div>
</li>
}